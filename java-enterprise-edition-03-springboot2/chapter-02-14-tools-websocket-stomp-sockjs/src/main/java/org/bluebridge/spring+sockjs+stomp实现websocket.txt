STOMP协议的核心特点：
    英文全称：Simple Text Oriented Messaging Protocol
    简单易用：基于文本的协议，命令结构类似HTTP
    跨语言支持：几乎所有主流编程语言都有STOMP客户端库
    基于帧：所有通信基于帧（frame）进行，包含命令、头信息和消息体
    发布/订阅模式：支持标准的发布/订阅消息模式
    目的地导向：消息通过目的地（destination）进行路由

为什么要将STOMP与WebSocket结合使用
    WebSocket提供了浏览器和服务器之间的双向通信通道，但它并没有定义应用层的消息格式和路由机制。这就像有了高速公路，但没有交通规则一样。
    将STOMP与WebSocket结合使用，可以获得以下几个方面的好处：

    1.标准化的消息格式
        原生WebSocket没有定义消息的格式，开发人员需要自行设计消息结构，这可能导致不一致和兼容性问题。STOMP提供了标准化的消息格式，包括命令、头信
        息和消息体，使消息交换更加规范和统一。
    2.消息路由机制
        STOMP的目的地（destination）概念允许消息按照特定的主题或队列进行路由，这使得复杂的消息分发变得简单。客户端可以订阅特定的目的地，只接收感
        兴趣的消息。
    3.消息确认和事务支持
        STOMP支持消息确认机制，确保消息被正确处理。同时，它还支持事务，可以将多个操作组合成一个原子单元
    4.与消息中间件的无缝集成
        STOMP可以与ActiveMQ、RabbitMQ、Apache Kafka等主流消息中间件无缝集成，使WebSocket应用能够利用这些成熟中间件的强大功能。
    5.错误处理机制
        STOMP提供了标准的错误处理机制，当出现问题时，服务器可以发送错误帧给客户端，包含详细的错误信息。