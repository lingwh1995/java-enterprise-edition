package com.dragonsoft.bigdata.test;

import com.dragonsoft.bigdata.domain.Employee;
import org.apache.ibatis.io.Resources;
import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.ibatis.session.SqlSessionFactoryBuilder;
import org.junit.Test;

import java.io.IOException;
import java.io.InputStream;
import java.sql.Date;
import java.text.DecimalFormat;
import java.util.Random;

/**
 * 制造大批量数据
 */
public class MybatisHelloWorldTest {

    /**
     * 1、根据xml配置文件（全局配置文件）创建一个SqlSessionFactory对象 有数据源一些运行环境信息
     * 2、sql映射文件；配置了每一个sql，以及sql的封装规则等。
     * 3、将sql映射文件注册在全局配置文件中
     * 4、写代码：
     * 		1）、根据全局配置文件得到SqlSessionFactory；
     * 		2）、使用sqlSession工厂，获取到sqlSession对象使用他来执行增删改查
     * 			一个sqlSession就是代表和数据库的一次会话，用完关闭
     * 		3）、使用sql的唯一标志来告诉MyBatis执行哪个sql。sql都是保存在sql映射文件中的。
     *
     * @throws IOException
     */
    private SqlSession getSqlSession() throws IOException {
        /**1.加载配置文件*/
        InputStream inputStream = Resources.getResourceAsStream("mybatis-config.xml");
        /**2.获取SqlSession对象*/
        SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);
        return sqlSessionFactory.openSession();
    }

    @Test
    public void fun1() throws IOException {
        SqlSession sqlSession = getSqlSession();
        try {
            Random random = new Random();
            for(int i=0;i<30000000;i++){
                //获取姓名
                String ename = getName(random);
                //获取工作
                String job = getJob(random);
                //获取入职日期
                Date hireDatedate = getHireDate(random);
                //获取sal
                double sal = getSal(random);
                //获取sal
                double comm = getComm(random);
                //获取部门编号
                int deptno = getDeptno(random);
                Employee employee = new Employee(ename,job,hireDatedate,sal,comm,deptno);
                sqlSession.insert("com.dragonsoft.bigdata.domain.EmployeeMapper.addEmp",employee);
            }
        } finally {
            sqlSession.close();
        }
    }

    /**
     * 获取姓名
     * @return
     */
    public String getName(Random random){
        String[] firstNames = {
                "赵","钱","孙","李","周","吴","郑","王","梅","盛","林","骆","闻","莘","党","翟","谭","贡","劳","逄","澹台","公冶","宗政","濮阳",
                "冯","陈","褚","卫","蒋","沈","韩","杨","高","夏","蔡","霍","姬","申","扶","堵","冉","宰","郦","雍","淳于","单于","太叔","申屠",
                "朱","秦","尤","许","何","吕","施","张","虞","万","支","莫","郤","璩","桑","桂","濮","牛","寿","通","公孙","仲孙","轩辕","令狐",
                "孔","曹","严","华","金","魏","陶","姜","经","房","裘","宗","边","扈","燕","冀","郏","浦","尚","农","钟离","宇文","长孙","慕容",
                "戚","谢","邹","喻","柏","水","窦","章","丁","宣","贲","洪","温","别","庄","晏","柴","瞿","阎","充","鲜于","闾丘","司徒","司空",
                "云","苏","潘","葛","奚","范","彭","郎","包","诸","左","龚","慕","连","茹","习","宦","艾","鱼","容","丌官","司寇","仉督","子车",
                "鲁","韦","昌","马","苗","凤","花","方","程","嵇","邢","翁","向","古","易","慎","戈","廖","庾","终","颛孙","端木","巫马","公西",
                "俞","任","袁","柳","酆","鲍","史","唐","荀","羊","於","封","暨","居","衡","步","都","耿","满","弘","漆雕","乐正","壤驷","公良",
                "费","廉","岑","薛","雷","贺","倪","汤","芮","羿","储","松","匡","国","文","寇","广","禄","阙","东","拓跋","夹谷","宰父","谷梁",
                "滕","殷","罗","毕","郝","邬","安","常","井","段","富","弓","欧","殳","沃","利","蔚","越","夔","隆","晋楚","闫法","汝鄢","涂钦",
                "乐","于","时","傅","皮","卞","齐","康","牧","隗","山","蓬","师","巩","厍","聂","晁","勾","敖","融","段干","百里","东郭","南门",
                "伍","余","元","卜","顾","孟","平","黄","全","郗","班","宫","冷","訾","辛","阚","那","简","饶","空","呼延","归海","羊舌","微生",
                "和","穆","萧","尹","姚","邵","湛","汪","宁","仇","栾","戎","曾","毋","沙","乜","养","鞠","须","丰","岳帅","缑亢","况郈","有琴",
                "祁","毛","禹","狄","米","贝","明","臧","祖","武","符","龙","巢","关","蒯","相","查","后","荆","红","梁丘","左丘","东门","西门",
                "计","伏","成","戴","谈","宋","茅","庞","叶","幸","司","薄","游","竺","权","逯","盖","益","桓","公","商牟","佘佴","伯赏","南宫",
                "熊","纪","舒","屈","项","祝","董","梁","印","宿","白","鄂","贾","杜","阮","蓝","闵","席","季","麻","墨哈","谯笪","年爱","阳佟",
                "强","索","咸","籍","蒙", "路","娄","危","江","童","颜","郭","池","乔","阴","双",
                "夏侯","诸葛","闻人","东方","赫连","皇甫","尉迟","公羊","万俟","司马","上官","欧阳"
        };
        String[] lastNames = {
                "力","乐","哲","伟","宏","才","山","凡","宗","盛","广","义","辉","磊","昊","升","卫","丰","天","元","云","择","直","林",
                "艺","仁","尺","风","丹","凤","文","书","玉","帅","龙","甘","布","叶","业","正","巧","可","文君","相如","启超","松","知",
                "吉","芒","亚","成","迈","光","纪","驰","巡","羽","花","芽","芹","丽","辰","豆","闲","灿","怀","环","青","垂","国","昌",
                "畅","明","易","思","倩","欣","莹","芝","团","旬","同","帆","刚","伟","名","壮","庆","亦","闯","阳","进","均","志","苍",
                "芳","利","秀","抗","声","坚","励","虎","贤","尚","旺","果","杰","香","江","兴","宇","安","军","孝","克","芬","希","希",
                "武","招","照","昭","启","棋","器","琪","达","尔","强","凯","申","通","严","艳","若","柱","珠","恒","衡","勉","希真","兆",
                "卓","越","哲","康","智","志","鹏","畅","露","立","涛","雪","研","航","轩","宣","萱","紫萱","子轩","子璇","子萱","宝","骏","影",
                "青","封","峰","锋","明月","振兴","震","荣","东","傲","萌","帅","康","非","菲力","良","升","安","晨","强","硕","烁","浪","欢",
                "慧","庚","同","敏","佳","函","样","旋","璇","善","博","瑞","清","民","浩","泽","中","楚","驹","忘川","默","枫","御","黎",
                "仪","洪","鸿雁","懿","秀","温","书","德","怀","淮安","怀安","思雨","长风","冲","莹","盈","转","海","岩","名","鸣","威","谦","优",
                "锦","小慧","芬","娅","托娅","思凯","斯凯","思年","德安","","怀安","志轩","骏捷","安邦","报国","精忠","千雅","炳","钰","国安","倩文","秀文","秀雯","志优",
                "英","保国","兰","兰芝","兰芽","朝阳","两","明扬","宁","柠","蒙","檬","笛","迪","华侨","侨","俊丽","栋","信","鑫","芯","斌","彬","驰",
                "永","勇","静","永成","永诚","冠捷","冠杰","天明","超贤","霆","贤","星","笛","梓铭","子明","子铭","俊丽","彦飞","丽华","歌","争","润","玲","讯"
        };
        int firstNameIndex = random.nextInt(firstNames.length);
        String firstName = firstNames[firstNameIndex];
        int lastNameIndex = random.nextInt(lastNames.length);
        String lastName = lastNames[lastNameIndex];
        return firstName + lastName;
    }

    /**
     * 获取职业
     * @param random
     * @return
     */
    public String getJob(Random random){
        String[]  jobs = {
                "行政主管","企业主管","土木营造监工","天文学家","电脑程式设计人员","系统分析师","道景师","品质管制工程师","陶瓷技师","药师","兽医师","公共卫生医师","中医师","护理佐理员","护理师","学前教育教师",
                "建筑师","交通规划师","化学工程技术师","土木工程师","造景师","测量员","销售工程师","工业工程师","公共卫生医师","土木营造监工","企业主管","天文学家","会计师",
                "公共关系员","律师","心理谘商师","人事管理师","翻译人员","人力仲介师","图书管理员","新闻记者","报刊杂志编辑人员","编剧","书籍编辑","石雕工","木雕工",
                "漫画家","舞蹈家","乐器演奏家","营建及工程管理","钢结构设计与管理人员","电子杂志编辑","资讯管理师","行销企划","网页设计师","电信工程师","市调人员","制程工程师","木雕工",
                "电机工程人员","摄影工作人员","商船工作人员","飞航管制员","轮机人员","病历管理师","推销员","证券商业务人员","销售代理人员","房地产经纪人","会计员","期货经纪人","商业美术设计师",
                "室内设计师","播音员","职业运动员","电视节目主持人","广告AE","国际贸易英文文书","资料登录员","会计师助理","品质管制助理员","仓库管理人员","美容师","供配销工作人员","美容理发师",
                "客务管理","金融业柜员","银行行员","外汇交易员","旅行社业务员","导游人员","空中服务员","文物解说员","厨师","调酒员","西餐厨师","餐旅服务人员","保姆",
                "报关人员","邮政工作人员","保全工作人员","警察","消防工作人员","时装模特儿","售货员","商品售货员","宠物美容师","园艺作物栽培员","苗圃工","建筑工","水电工",
                "工业配线工","卫生配管工","电工","油漆工","配线工","电焊工","花匠","铸造工","金属模具制造工","汽车板金工","汽车修护工","建筑工","事务机器修护工",
                "重机械修护工","汽车底盘工","铣床工","数值控制车床操作工","视听电子工","工业电子工","面包烘制工","电机修护工","电子仪表修护工","精密量具制造工","印刷工","建筑工","精密机械",
                "电器修护工","珠宝及贵重金属制造工","乐器调音师","陶瓷工","印刷设计与制版人员","烘焙食品","食品及饮料技师","家俱木工","木模工","精密量具制造工","缝纫工","织布工","西装工",
                "金属表面处理工","冷作工","刨床工","照相制版工","油气压自动控制人员","汽车驾驶员","电子装配人员","塑胶模具制造工","塑胶制品制造工","橡胶制品制造工","纸制品制造工","乳制品制造工","国服缝制人员",
                "制鞋工","服装设计与制作人员","女装工","成衣工","热处理工","汽车驾驶员","金属造型","合板制造工"
        };
        int jobIndex = random.nextInt(jobs.length);
        return jobs[jobIndex];
    }
    /**
     * 获取入职日期
     * @return
     */
    private Date getHireDate(Random random) {
        String year = String.valueOf(random.nextInt(42)+ 1980);
        String month = String.valueOf(random.nextInt(12)+1);
        month = month.length()==0 ? ("0" + month) : month;
        String day = String.valueOf(random.nextInt(30)+1);
        day = day.length()==0 ? ("0" + day) : day;
        String date = year + "-" + month + "-" + day;
        return Date.valueOf(date);
    }

    /**
     * 获取薪水
     * @param random
     * @return
     */
    public double getSal(Random random){
        double sal = random.nextDouble() + random.nextInt(200000);
        DecimalFormat df = new DecimalFormat( "0.00" );
        return Double.parseDouble(df.format(sal));
    }

    /**
     * 获取奖金
     * @param random
     * @return
     */
    public double getComm(Random random){
        double comm = random.nextDouble() + random.nextInt(10000);
        DecimalFormat df = new DecimalFormat( "0.00" );
        return Double.parseDouble(df.format(comm));
    }

    public int getDeptno(Random random){
        return random.nextInt(1000) + 1;
    }
}
