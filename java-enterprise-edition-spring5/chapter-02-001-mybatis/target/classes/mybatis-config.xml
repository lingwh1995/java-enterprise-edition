<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.mapper.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--
        引入外部配置文件
		1、mybatis可以使用properties来引入外部properties配置文件的内容；
		resource：引入类路径下的资源
		url：引入网络路径或者磁盘路径下的资源
	  -->
    <properties resource="db.properties"/>

    <!--
		2、settings包含很多重要的设置项
		setting:用来设置每一个设置项
			name：设置项名
			value：设置项取值
	 -->
    <settings>
        <!--开启驼峰命名-->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!--当数据库环境为Oracle时,将jdbcTye由OTHER设置为NULL-->
        <setting name="jdbcTypeForNull" value="NULL"/>
        <!-- 关联查询时查询从表数据是否开启懒加载模式  -->
        <setting name="lazyLoadingEnabled" value="true"/>
        <setting name="aggressiveLazyLoading" value="false"/>
        <!--开启二级缓存-->
        <setting name="cacheEnabled" value="true"/>
    </settings>

    <!-- 配置别名
        3、typeAliases：别名处理器：可以为我们的java类型起别名
			别名不区分大小写
	-->
    <typeAliases>
        <!-- 1、typeAlias:为某个java类型起别名
				type:指定要起别名的类型全类名;默认别名就是类名小写；employee
				alias:指定新的别名
		 -->
        <!-- <typeAlias type="com.atguigu.mybatis.mapper.bean.Employee" alias="emp"/> -->

        <!-- 2、package:为某个包下的所有类批量起别名
                name：指定包名（为当前包以及下面所有的后代包的每一个类都起一个默认别名（类名小写），）
        -->
        <typeAlias type="com.dragonsoft.interfacemapper.domain.Employee" alias="employeeX"/>
    </typeAliases>
    <!--配置多环境:测试/生产-->

    <!--
        4、environments：环境们，mybatis可以配置多种环境 ,default指定使用某种环境。可以达到快速切换环境。
            environment：配置一个具体的环境信息；必须有两个标签；id代表当前环境的唯一标识
                transactionManager：事务管理器；
                    type：事务管理器的类型;JDBC(JdbcTransactionFactory)|MANAGED(ManagedTransactionFactory)
                        自定义事务管理器：实现TransactionFactory接口.type指定为全类名

                dataSource：数据源;
                    type:数据源类型;UNPOOLED(UnpooledDataSourceFactory)
                                |POOLED(PooledDataSourceFactory)
                                |JNDI(JndiDataSourceFactory)
                    自定义数据源：实现DataSourceFactory接口，type是全类名
         -->
    <environments default="home_dev_mysql">
        <environment id="home_dev_oracle">
            <transactionManager type="JDBC">
                    <!--type:JDBC/MANAGED]")-->
            </transactionManager>
            <dataSource type="POOLED">
                <!--写死的数据库连接信息-->
                <!--<property name="driver" value="oracle.jdbc.OracleDriver"/>-->
                <!--<property name="url" value="jdbc:oracle:thin:@192.168.1.100:1521:orcl"/>-->
                <!--<property name="username" value="scott"/>-->
                <!--<property name="password" value="tiger"/>-->
                <!--从配置文件中获取的数据库连接信息-->
                <property name="driver" value="${home.develop.oracle.jdbc.driver}"/>
                <property name="url" value="${home.develop.oracle.jdbc.url}"/>
                <property name="username" value="${home.develop.oracle.jdbc.username}"/>
                <property name="password" value="${home.develop.oracle.jdbc.password}"/>
            </dataSource>
        </environment>
        <environment id="home_dev_mysql">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <!-- 写死的数据库连接信息 -->
                <!--
                <property name="driver" value="com.mysql.cj.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://192.168.0.2:3306/test"/>
                <property name="username" value="root"/>
                <property name="password" value="123456"/>
                -->
                <!--从配置文件中获取的数据库连接信息-->
                <property name="driver" value="${home.develop.mysql.jdbc.driver}"/>
                <property name="url" value="${home.develop.mysql.jdbc.url}"/>
                <property name="username" value="${home.develop.mysql.jdbc.username}"/>
                <property name="password" value="${home.develop.mysql.jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!-- 5、databaseIdProvider：支持多数据库厂商的；
     type="DB_VENDOR"：VendorDatabaseIdProvider
         作用就是得到数据库厂商的标识(驱动getDatabaseProductName())，mybatis就能根据数据库厂商标识来执行不同的sql;
         MySQL，Oracle，SQL Server,xxxx
  -->
    <databaseIdProvider type="DB_VENDOR">
        <!-- 为不同的数据库厂商起别名 -->
        <property name="MySQL" value="mysql"/>
        <property name="Oracle" value="oracle"/>
        <property name="SQL Server" value="sqlserver"/>
    </databaseIdProvider>

    <!-- 导入mapper -->
    <mappers>
        <!--mybatis.mapper helloworld-->
        <mapper resource="com/dragonsoft/helloworld/mapper/EmployeeMapper.xml"/>
        <!--mybatis.mapper helloworld-->
        <mapper resource="com/dragonsoft/bigdata/mapper/EmployeeMapper.xml"/>
        <!--mybatis接口式编程-->
        <mapper resource="com/dragonsoft/interfacemapper/mapper/oracle/EmployeeMapper-oracle.xml"/>
        <mapper resource="com/dragonsoft/interfacemapper/mapper/mysql/EmployeeMapper-mysql.xml"/>
        <!--Mybatis CRUD-->
        <mapper resource="com/dragonsoft/crud/mapper/oracle/EmpMapper-oracle.xml"/>
        <!--mybatis使用resultmap封装数据-->
        <mapper resource="com/dragonsoft/resultmap/mapper/oracle/IEmployeeResultMap-oracle.xml"/>
        <mapper resource="com/dragonsoft/resultmap/mapper/oracle/IDepartment-oracle.xml"/>
        <!-- mybatis缓存-oracle版 -->
        <!-- <mapper resource="com/dragonsoft/cache/mapper/oracle/IEmployeeMapper-oracle.xml"/>-->
        <!-- <mapper resource="com/dragonsoft/cache/mapper/oracle/IDepartmentMapper-oracle.xml"/>-->
        <!-- mybatis缓存-mysql版 -->
        <mapper resource="com/dragonsoft/cache/mapper/mysql/IEmployeeMapper-mysql.xml"/>
        <mapper resource="com/dragonsoft/cache/mapper/mysql/IDepartmentMapper-mysql.xml"/>
        <!--动态sql-->
        <mapper resource="com/dragonsoft/dynamicsql/mapper/oracle/EmpMapper-oracle.xml"/>
        <!--mybatis两个内置参数-->
        <mapper resource="com/dragonsoft/builtinparam/mapper/oracle/EmpMapper-oracle.xml"/>
        <!--抽取可重用的sql片段-->
        <mapper resource="com/dragonsoft/multiplexsql/mapper/oracle/EmpMapper-oracle.xml"/>
        <!--mybatis generator生成的xml文件-->
        <!--<mapper resource="com/dragonsoft/generator/sql/EmployeeMapper.xml"/>-->
    </mappers>
</configuration>